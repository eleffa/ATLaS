51201 Command and Control Computer Software Component The Command and Control Command and Control Module Computer Software Component Computer Software Component is a Level 2 reuse component from the INSTRUMENT Y project The Command and Control Computer Software Component includes the following components A Control Task Command and Control Module Computer Software Component ControlTask which initializes the DATA PROCESSING UNIT Flight Software and spawns other tasks at boot up schedules the production of DATA PROCESSING UNIT housekeeping data packets monitors the execution of other tasks and schedules the execution of other periodic tasks such as the heartbeat message and the watchdog strobe and A Command Dispatch Task Command and Control Module Computer Software Component CommandTask which receives and dispatches real time commands received from the Spacecraft Control Unit or the Instrument Control Unit Major data structures include A Static Data table that keeps track of the operational state Data included in this table includes housekeeping production rates Command and Control Module Computer Software Component specific flags and the number of commands executed A Command Queue into which commands are placed when they arrive via interrupt from the Instrument Control Unit or the Spacecraft Control Unit An Error Event Queue which accumulates error and event codes which are reported by the DATA PROCESSING UNIT Flight Software These error and event codes are removed from the queue and placed into a telemetry packet at a given interval and included in DATA PROCESSING UNIT housekeeping data 
512111 Flight Software Initialization The Command and Control Computer Software Component is initialized by spawning the Command and Control Module Computer Software Component Control Task Command and Control Module Computer Software Component ControlTask from the operating system startup task userRoot After the task is spawned it calls a function Command and Control Module Computer Software Component Init which creates the error event queue instantiates needed semaphores and installs various s Finally it spawns the remaining tasks which comprise the DATA PROCESSING UNIT Flight Software When the Command and Control Module Computer Software Component Control Task starts up it reads DATA PROCESSING UNIT configuration startup defaults from the SYSTEM CONFIG AREA in Electrically Erasable Programmable Read-Only Memory If the SYSTEM CONFIG AREA checksum is bad hard coded defaults are used The Command and Control Module Computer Software Component Control Task initializes the remaining CSCs by calling the applicable initialization function or if the Computer Software Component has an associated task by spawning the task using the V X Works function taskSpawn When the Command and Control Module Computer Software Component Control Task initializes a Computer Software Component it passes the startup defaults read from Electrically Erasable Programmable Read-Only Memory as parameters to the task initialization function In addition to its task initialization activities Command and Control Module Computer Software Component Init also initializes the command length verification table by calling Command and Control Module Computer Software Component CommandLengthInit The command processor uses the created table to verify expected command lengths for newly received commands 
512121 Control and Monitoring the Command and Control Module Computer Software Component Control Task initializes the DATA PROCESSING UNIT Flight Software It is the responsibility of the Command and Control Module Computer Software Component Control Task to establish a successful boot It does so by blocking on temporary semaphores each with a 5 second timeout after spawning the Spacecraft Control Unit Interface Task and the Command and Control Module Computer Software Component Command Task If both of these tasks report a successful initialization by giving the semaphore the Command and Control Module Computer Software Component Control Task toggles the Boot Configuration  INDEX parameter in Electrically Erasable Programmable Read-Only Memory to indicate a successful boot If either task does not report a successful initialization the Command and Control Module Computer Software Component Control Task disables the watchdog strobe to effect a reboot of the DATA PROCESSING UNIT The rationale for selecting the successful initialization of these two tasks as the definition of a successful boot is that the DATA PROCESSING UNIT Flight Software requires these tasks as a minimum to establish ground contact and provide commendable Once this initialization is complete the task blocks on a binary semaphore which is given by the Spacecraft Control Unit Interface Computer Software Component Command  upon arrival of the 1 hertz Clock Message In the event a Clock Message does not arrive the semaphore will time out after 1 5 seconds The Command and Control Module Computer Software Component Control Task remains alive to create and transmit DATA PROCESSING UNIT housekeeping at the appropriate intervals perform various periodic processing tasks and to process memory dump commands The final call to Command and Control Module Computer Software Component ErrorPlace in a queue is performed in order that if an error occurs in an interrupt service routine a global variable is set to the value of the error which is then place in a queue into the Error Event Queue as part of this task s normal processing 
512122 Control and Monitoring The DATA PROCESSING UNIT produces eight types of housekeeping packets 
512123 Control and Monitoring Every time the Command and Control Module Computer Software Component Control executes it calls Command and Control Module Computer Software Component PerProcess to handle periodic processing responsibilities Such responsibilities include analog to digital conversion updates DATA PROCESSING UNIT task monitoring Instrument Control Unit heartbeat message production and watchdog strobe The Command and Control Module Computer Software ComponentHealthHousekeeping function called by Command and Control Module Computer Software Component PerProcess verifies the execution of other tasks by monitoring the amount of time that has elapsed since each task last reported Other tasks report their execution to the Command and Control Module Computer Software Component Control Task by calling the function Command and Control Module Computer Software Component TaskReport providing their task index Each task has an expected execution frequency and if a task does not execute as expected an error is reported in DATA PROCESSING UNIT housekeeping If the Command Dispatch Task fails to report for an extended period the DATA PROCESSING UNIT will execute a reboot since it is impossible to command the DATA PROCESSING UNIT if this task is not executing otherwise it will strobe the watchdog 
512124 Control and Monitoring the Command and Control Module Computer Software Component Control Task also handles memory dump commands In the event of a data dump command the Command and Control Module Computer Software Component Control Task will break the dump into manageable pieces and dump a small portion at a time each time the task is awakened The purpose of this deferred activity is to prevent a large dump from consuming available Central Processing Unit time by keeping the high priority Command and Control Module Computer Software Component Command Dispatch Task busy for an extended period 
512131 Command Handling The DATA PROCESSING UNIT accepts commands via two interfaces from the Spacecraft via the driver interface and from the Instrument Control Unit via the Synchronous Serial Interface interface Any of the DATA PROCESSING UNIT commands can be sent from the Spacecraft Control Unit or the Instrument Control Unit The source for a command from the DATA PROCESSING UNIT is one of the following Instrument Control Unit command is generated and sent by the Instrument Control Unit via the Synchronous Serial Interface Spacecraft Control Unit command is generated and sent by the Spacecraft Control Unit via the 1553 G Instrument Control Unit command is generated on the ground and sent to the DATA PROCESSING UNIT via the Instrument Control Unit Synchronous Serial Interface G Spacecraft Control Unit command is generated on the ground and sent to the DATA PROCESSING UNIT via the Spacecraft Control Unit 1553 
512132 Command Handling When a command arrives from the Spacecraft Control Unit via the 1553 interface or the Instrument Control Unit via the Synchronous Serial Interface interface the respective  will place in a queue the command packet into a Command Queue and then give the semaphore to awaken the Command and Control Module Computer Software Component CommandTask Since it is possible for the DATA PROCESSING UNIT to send a command to itself commands may arrive at interrupt context or task context Therefore the Command and Control Module Computer Software Component maintains two queues one for interrupt context which is not semaphore protected and one for task context which is semaphore protected 
512133 Command Handling Commands are remove from a queue from the Command Queue and executed by the Command Dispatch Task Command and Control Module Computer Software Component CommandTask This task blocks on a semaphore which is given by Command and Control Module Computer Software Component CommandPlace in a queue The Command and Control Module Computer Software Component CommandTask wakes on the semaphore and calls Command and Control Module Computer Software Component CommandProcess to process waiting commands The Command and Control Module Computer Software Component CommandProcess function subsequently retrieves waiting commands from the Command Queue and invokes Command and Control Module Computer Software Component CommandDispatch to verify the expected length of the command and execute it If command echo is enabled Command and Control Module Computer Software Component CommandDispatch will call Command and Control Module Computer Software Component Housekeeping Mk CommandEcho to blindly echo the command back to the ground Counts for both rejected and executed commands are maintained If the command sent to Command and Control Module Computer Software Component CommandPlace in a queue is either a 1 hertz Clock Time message or an Attitude message from the spacecraft the command will not be forwarded to the Command Queue but instead will be executed directly while still in interrupt context Attitude messages are forwarded to Data Processing Algorithm CSCCommandSend while the 1 Hertz Clock Time message s parameters are passed to Time Synchronous in order to synchronize the current time Any other non DATA PROCESSING UNIT or spacecraft observatory messages are quietly discarded without reporting an error In order to guarantee that Command and Control Module Computer Software Component CommandTask task reports in with the Command and Control Module Computer Software Component Control Task periodically in absence of a ground command the semaphore has a timeout value of 20 seconds If the semaphore times out the task will verify no commands are on the Command Queue and then report in to the Command and Control Module Computer Software Component Control Task by calling Command and Control Module Computer Software Component TaskReport 
512141 Memory Upload and Download Handling There are two ways to upload data to the DATA PROCESSING UNIT Memory Poke D MEMORY Data Analysis Terminal POKE command or Memory Upload D MEMORY Data Analysis Terminal UPLOAD command The memory poke command is used when a small Z bytes of data need to be poked into a DATA PROCESSING UNIT memory location The Z byte limitation is derived from the Company X command length constraint 
512142 Memory Upload and Download Handling When larger amounts of memory must be uploaded to the DATA PROCESSING UNIT such as in the case of a software patch or full software upload the regular memory upload is used Memory uploads are accomplished by sending a series of individual D MEMORY Data Analysis Terminal UPLOAD commands resulting in a single virtual upload Consultative Committee for Space Data Systems like sequence grouping flags are employed to allow the DATA PROCESSING UNIT Flight Software to accept up to a maximum of 65535 bytes in a single virtual upload The data contained in each D MEMORY Data Analysis Terminal UPLOAD command is stored in a temporary Dynamic Random Access Memory buffer until all of the sequence numbers in the entire upload have been successfully received When the DATA PROCESSING UNIT Flight Software receives the last command in the series the Flight Software will verify that all sequence numbers have been received verify the end end upload checksum and then write the entire temporary buffer to the target location specified in the first upload command 
512143 Memory Upload and Download Handling If more than 65535 bytes need to be uploaded the upload file must be broken up into multiple smaller files each less than or equal to 65535 bytes and then each of the virtual uploads should be sent in series Because of the sequence numbers the DATA PROCESSING UNIT Flight Software can receive individual upload commands out of sequence There is no time limit for the accomplishment of a single virtual upload and so a long upload can continue across ground contacts If an upload is in progress the last sequence number can be sent to the DATA PROCESSING UNIT Flight Software and it will report the list of missing sequence numbers via event number S Command and Control Module Computer Software Component MISSING SequenceNumber If an upload is in progress and needs to be canceled it can be discarded by issuing the D MEMORY Data Analysis Terminal CANCEL command 
512144 Memory Upload and Download Handling Data can be upload to several types of locations including Dynamic Random Access Memory Electrically Erasable Programmable Read-Only Memory hardware registers and Electrically Erasable Programmable Read-Only Memory filesystem D MEMORY Data Analysis Terminal UPLOAD command specify the target location If the destination is the Electrically Erasable Programmable Read-Only Memory filesystem a block number is provided in lieu of a memory address which is used by the DATA PROCESSING UNIT Flight Software to formulate a filename of the form Electrically Erasable Programmable Read-Only Memory File System DATA PROCESSING UNIT where is the block number In this case once the entirety of the uploaded data is received by the DATA PROCESSING UNIT Flight Software the uploaded data is then written to that file in the Electrically Erasable Programmable Read-Only Memory filesystem If a file already exists with that name it is overwritten The Electrically Erasable Programmable Read-Only Memory filesystem can be reset using the command D MEMORY DISK INIT 
512145 Memory Upload and Download Handling The command D MEMORY DOWNLOAD is used to download data from a file contained in the Electrically Erasable Programmable Read-Only Memory filesystem As in the upload command only the block number need be provided and the entire contents of the filename formed from the block number will be downloaded To download data from any location other than the Electrically Erasable Programmable Read-Only Memory filesystem the command D MEMORY Data Analysis Terminal DOWNLOAD is used As described previously downloads handled in a deferred fashion to avoid consuming excessive Central Processing Unit time A single virtual download will appear on the ground as a series of download packets the contents of which must be extracted and concatenated in order to recreated the original data sequence 
512151 Error Collection and Reporting The DATA PROCESSING UNIT Command and Control Module Computer Software Component Computer Software Component provides a centralized error reporting interface Command and Control Module Computer Software Component ErrorPlace in a queue that other Flight Software tasks use to report errors Each time it wakes Command and Control Module Computer Software Component Task checks to see if it is time to form an error event packet for transmission to the ground If so Command and Control Module Computer Software Component Task calls Command and Control Module Computer Software Component Housekeeping Mk Error to actually create the packet and forward it to DATA PROCESSING UNIT Spacecraft Control Unit Interface Computer Software Component for transmission to the ground 
512152 Error Collection and Reporting The Command and Control Module Computer Software Component ErrorPlace in a queue function tracks the last error reported and its frequency of occurrence Once an error code has been reported it becomes the previously reported error code maintained by Command and Control Module Computer Software Component ErrorPlace in a queue A repetition count is then incremented for each subsequent consecutively reported identical instance of this previously reported error If this error code is reported more than once in one high rate housekeeping reporting period then a special error S Command and Control Module Computer Software Component ERROR REPEAT is place in a queue with the repetition count for the error encoded in the least significant byte This mechanism effectively reduces the potential for housekeeping telemetry to become flooded with a single repeated error 
512153 Error Collection and Reporting The S Command and Control Module Computer Software Component Error REPEAT error encodes the count of the last repeated error in its low order byte If a new error is reported as Spacecraft Control Units sed above Command and Control Module Computer Software Component ErrorPlace in a queue will place in a queue a S Command and Control Module Computer Software Component Error REPEAT for any previously repeated error along with the newly reported error In order to keep the original error codes and their repeated counts together in the same error packet Command and Control Module Computer Software Component Mk Housekeeping Error place in a queue a special error code S Command and Control Module Computer Software Component ERROR FLUSH as a special signal to Command and Control Module Computer Software Component ErrorPlace in a queue that it needs to clear its error tracking mechanism and place in a queue any repeated error counts associated with a particular error 
512154 Error Collection and Reporting In order to insure that error counts are not lost due to rollover Command and Control Module Computer Software Component ErrorPlace in a queue checks to insure that the count for a given error has not gone above 250 in one high rate housekeeping reporting period If the error count exceeds 250 for a particular reporting period Command and Control Module Computer Software Component Error Place in a queue will place in a queue S Command and Control Module Computer Software Component Error REPEAT error with the current error count and will clear its error tracking mechanism 
512155 Error Collection and Reporting The Command and Control Module Computer Software Component ErrorPlace in a queue may also be called from Interrupt context In interrupt context the mutual exclusion mechanism implemented on the Error Queue cannot be used since it is illegal to take a semaphore in an interrupt context To circumvent this limitation the global variable Command and Control Module Computer Software Component  Error is set with the appropriate error code The error will be queued the next time Command and Control Module Computer Software Component Task runs Due to the manner in which errors are handled in interrupt context it is possible to loose errors if more than one error occurs in interrupt context before Command and Control Module Computer Software Component Task executes the previous error will be overwritten by the new error 
512156 Error Collection and Reporting At boot time no error queue exists because it has yet to be created Errors that occur in this early stage of error reporting are assigned directly to the global task variable error The reader may refer to the V X Works Programmer s Guide section 2 3 7 for more information on error If error is set after the error queues are created it is queued to the Error Queue by calling Command and Control Module Computer Software Component Error Place in a queue 
51221 Public Functions This routine is called by the driver Command  and the Synchronous Serial Interface Interface  any time a command arrives from the Spacecraft Control Unit or the Instrument Control Unit to place in a queue the command and to wake up the Command and Control Module Computer Software Component Command Dispatch Task so that the command can be executed 
51222 Public Functions This routine is called by any Computer Software Component in order to report an error or event that should be included in DATA PROCESSING UNIT housekeeping If this routine is called from interrupt context a static global variable Command and Control Module Computer Software Component  Error is set so that the error can be place in a queue later see Command and Control Module Computer Software Component ControlTask This is done since the error event queue is semaphore protected and a semaphore cannot be taken in an  The error queue semaphore has priority inversion set to reduce conflicts between multiple callers should a priority inversion situation arise This routine also replaces frequently occuring errors with a special repeat error code The repeat error code is a special error code that follows a normally reported error code to indicate that the normally reported error code previously reported has occurred more than once in the last high rate reporting period 
51223 Public Functions This routine is called by each DATA PROCESSING UNIT Flight Software task to report that the task has executed so that the Command and Control Module Computer Software Component ControlTask can assess the health of the DATA PROCESSING UNIT Flight Software execution 
51224 Public Functions This routine is called by the driver Command  at 1 hertz arrival of the Clock Message to wake up the Command and Control Module Computer Software Component Control Task which blocks on a semaphore after completing its processing 
51231 Global Data the global data items which are accessed by this Computer Software Component 
51301 Telescope Module Access Library and Interface Computer Software Component The Telescope Module Access Library and Interface Telescope Module Access Library Interface Computer Software Component Computer Software Component manages the detector event queue and provides an Application Programming Interface for the retrieval of detector events from that queue to the data processing algorithms 
51302 Telescope Module Access Library and Interface Computer Software Component The Telescope Module Access Library Interface Computer Software Component Computer Software Component includes the following components A queue Telescope Module Access Library Interface Computer Software Component EVENT QUEUE implemented using a ring buffer which contains the detector events which have been received over the data capture interface from the Data Capture Interface  Driver but which have not yet been retrieved by the Data Processing Algorithm Computer Software Component Computer Software Component An Application Programming Interface which facilitates the retrieval of detector events from the queue by the Data Processing Algorithm Computer Software Component Computer Software Component The Application Programming Interface consists of the Telescope Module Access Library Interface CSCNextEvent and Telescope Module Access Library Interface Computer Software Component Wait functions An set of Application Programming Interface functions used by the Data Processing Algorithm Computer Software Component Computer Software Component to configure the Data Capture Interface  interface including Telescope Module Access Library Interface CSCBitArrangementSet Telescope Module Access Library Interface CSCData Capture InterfaceFrameDepthGet Telescope Module Access Library Interface CSCData Capture InterfaceFrameDepthSet Telescope Module Access Library Interface CSCData Capture InterfaceWindowSet Telescope Module Access Library Interface Computer Software Component DataTimeoutSet and Telescope Module Access Library Interface Computer Software Component DataTimeoutGet An Application Programming Interface housekeeping function Telescope Module Access Library Interface CSCHkGet which gathers Computer Software Component housekeeping data at the request of the Command and Control Task The task Telescope Module Access Library Interface Computer Software Component Task and an  Telescope Module Access Library Interface CSCTransferToQueue work together via a semaphore to synchronize the transfer of data from the Data Capture Interface  to the queue An error handling  Telescope Module Access Library Interface Computer Software Component Data Capture Interface  Error Reported  is installed as a hook routine to the Data Capture Interface  Driver and is used to keep track of the number of errors reported by the Data Capture Interface  driver 
513111 Normal Data Exchange Sequence The Telescope Module Access Library Interface Computer Software Component Computer Software Component serves as an intermediate manager of EVENT data supplied by the Data Capture Interface  Driver Computer Software Component and eventually delivered to the Data Processing Algorithm Computer Software Component Computer Software Component The Telescope Module Access Library Interface Computer Software Component Computer Software Component waits for notification from the Data Capture Interface  Computer Software Component that a frame limit or data timeout has been reached in the Ping Pong buffer indicating the EVENT data is ready to be served to Telescope Module Access Library Interface Computer Software Component Telescope Module Access Library Interface Computer Software Component reads all EVENT data from the Data Capture Interface  and notifies the Data Capture Interface  that it can swap Ping Pong buffers when ready Telescope Module Access Library Interface Computer Software Component gives a semaphore to unblock the Telescope Module Access Library Interface Computer Software Component Wait call from the Data Processing Algorithm Computer Software Component 
513112 Normal Data Exchange Sequence The Data Processing Algorithm Computer Software Component Computer Software Component calls Telescope Module Access Library Interface Computer Software Component Wait to determine how many EVENTS are waiting to be read When Telescope Module Access Library Interface Computer Software Component Wait returns with a number greater than zero the Data Processing Algorithm Computer Software Component calls Telescope Module Access Library Interface Computer Software Component NextEvent for each EVENT to be collected 
513121 Initialization The Telescope Module Access Library Interface Computer Software Component Computer Software Component is initialized by spawning the Telescope Module Access Library Interface Computer Software Component Task with the startup default parameters This task will allocate memory for the Telescope Module Access Library Interface Computer Software Component EVENT QUEUE install Data Capture Interface  s initialize static variables and data structures and then enter an end less loop in which it transfers the data from the Data Capture Interface  to the Telescope Module Access Library Interface Computer Software Component queue throttled by the semaphore Data Capture Interface  Wait 
513131 Data Transfer to Queue During initialization the Telescope Module Access Library Interface Computer Software Component Computer Software Component installs an  hook routine Telescope Module Access Library Interface Computer Software Component TransferToQueue into the Data Capture Interface  Driver which is invoked when the Data Capture Interface  interface reaches the programmed frame limit in the Ping Pong buffer or the Data Capture Interface  interface detects a data receipt timeout 
513132 Data Transfer to Queue When the Telescope Module Access Library Interface Computer Software Component TransferToQueue  is invoked it gives a semaphore to awaken Telescope Module Access Library Interface Computer Software Component Task that will transfer data to the queue over the bus The Telescope Module Access Library Interface Computer Software Component Task uses the read function in the Data Capture Interface  Driver which implements a data transfer using a high speed assembly language routine Because the Telescope Module Access Library Interface Computer Software Component ring buffer is implemented as an array the Telescope Module Access Library Interface Computer Software Component Task function must first examine the Telescope Module Access Library Interface Computer Software Component EVENT QUEUE to determine whether the data resident in the Data Capture Interface  buffer can be retrieved using a single read call or whether two calls are required in order to correctly handle the wrap around case at the end of the ring buffer In addition the Telescope Module Access Library Interface Computer Software Component Task function must perform an error check to verify that there is sufficient space to receive the data available in the Ping Pong buffer If there is insufficient space for the complete set of frames the entire contents of the readable Ping Pong buffer are discarded and the error S Telescope Module Access Library Interface Computer Software Component QUEUE FULL is reported using Command and Control Module Computer Software Component Error Place in a queue mechanism Such discarded data constitutes an integral number of Charge Coupled Device frames since the Data Capture Interface  hardware design ensures that Ping Pong transitions occur at Charge Coupled Device frame boundaries This policy of discarding the newer data supports the scientific viewpoint that events collected right after a burst have more scientific value than events collected later 
513133 Data Transfer to Queue Once the events in the Ping Pong buffer have been completely transferred to the Telescope Module Access Library Interface Computer Software Component EVENT QUEUE the Telescope Module Access Library Interface Computer Software Component Task function must re arm the hardware to swap the Ping Pong buffer when ready In the event that Telescope Module Access Library Interface Computer Software Component does not finish transferring the data from the ping buffer before the pong buffer is full the Data Capture Interface  Driver will issue an error interrupt invoking the Telescope Module Access Library Interface Computer Software Component Data Capture Interface  Error Reported  In response the Telescope Module Access Library Interface Computer Software Component Data Capture Interface  Error Reported  will set an error flag so that the Telescope Module Access Library Interface Computer Software Component Task can recover The Telescope Module Access Library Interface Computer Software Component Data Capture Interface  Error Reported  also gives the semData Capture InterfaceWait semaphore to awaken the Telescope Module Access Library Interface Computer Software Component Task even though it is likely already awake since it is possible that the Telescope Module Access Library Interface Computer Software Component Task has just completed transfer of the data at the time the error occurs The error will also be counted in Telescope Module Access Library Interface Computer Software Component Housekeeping The Data Capture Interface  hardware will discard events until the Telescope Module Access Library Interface Computer Software Component Task function completes the prior transfer recognizes the error flag and in response manually forces a Ping Pong swap and re enables data acquisition This guarantees that only complete frames end up in the Ping Pong buffer and will be considered for processing In normal operation this error should not occur as the Telescope Module Access Library Interface Computer Software Component task should be fast enough to retrieve data from the Data Capture Interface  Ping Pong buffer When events can t be handled fast enough the problem should result in an Telescope Module Access Library Interface Computer Software Component queue full condition which is reported as an S Telescope Module Access Library Interface Computer Software Component QUEUE FULL error using the Command and Control Module Computer Software Component Error Place in a queue mechanism 
513141 Event Retrieval From Queue Events are retrieved from the Telescope Module Access Library Interface Computer Software Component EVENT QUEUE by the Data Processing Algorithm Computer Software Component Computer Software Component via an Application Programming Interface consisting of two functions Telescope Module Access Library Interface Computer Software Component Wait and Telescope Module Access Library Interface CSCNextEvent For efficiency the following Application Programming Interface usage points are relevant The Data Processing Algorithm Computer Software Component Computer Software Component will inline the Telescope Module Access Library Interface CSCNextEvent function in order to avoid a function call for each event The Data Processing Algorithm Computer Software Component Computer Software Component will place each event received into a register and complete the processing for a given event while resident in a register before retrieving the next event and The Telescope Module Access Library Interface CSCNextEvent function performs no error checking in order to maximize the efficiency of the function Therefore the Data Processing Algorithm Computer Software Component Computer Software Component must keep track of the number of events retrieved versus the number provided in return from Telescope Module Access Library Interface Computer Software Component Wait 
513151 Ring buffer data structure The Computer Software Component maintains a first in first out implemented as a ring buffer to temporarily store the data received from the Data Capture Interface  before it is processed The ring buffer uses two pointers called pIn and pOut to keep track of the data in the buffer The pointers were defined such that reading from the buffer is the simplest operation and only a single compare is needed to verify if the buffer is empty The buffer only stores Events so the pointers point to these four byte entities As the Data Capture Interface  specifies all data in bytes sizes have to be converted before reading data 
513152 Ring buffer data structure The pIn and pOut pointers are defined as follows pIn last location filled with data pOut last empty location 
513153 Ring buffer data structure This definition results in the following administration is simple but one location is wasted in the buffer full situation the pIn pointer is one less that the pOut pointer buffer empty when the pIn pointer and the pOut pointer are equal 
513154 Ring buffer data structure A separate pointer indicates the end of the buffer pEnd This pointer points to the last available location in the buffer Before advancing either pointer it should be verified whether the pointer points to the last location in that case the pointer is reset to the start of the buffer pointed to by pBuffer otherwise it can just be incremented 
513161 Setting Data Capture Interface  Bit Arrangement The bit arrangement of the Data Capture Interface  control status register can be set via Telescope Module Access Library Interface Computer Software Component Bit Arrangement Set 
513162 Setting Hardware Windowing The hardware windowing function of the Data Capture Interface  can be activated and controlled via Telescope Module Access Library Interface Computer Software Component Data Capture Interface  WindowSet This function activates the hardware windowing function and transfers the specified window parameters to the Data Capture Interface  driver 
513163 Setting Frame Depth in Data Capture Interface  The optimum frame depth will be determined with benchmark testing The default frame depth is 10 frames Given the above data it will take approximately 24 milliseconds to read 10 maximum sized frames at the maximum data transfer rate 
513164 Setting Data Timeout in Data Capture Interface  During nominal operation frames arrive approximately every 11 milliseconds The Data Capture Interface  hardware will generate an interrupt if event data has been received in one of the Ping Pong buffers and a configurable amount of time has passed during which no additional events have been received A data timeout interrupt is not an error but rather typically indicates that the current exposure has been completed The data timeout interrupt allows the Telescope Module Access Library Interface Computer Software Component Computer Software Component to retrieve the trailing events from the Data Capture Interface  Ping Pong buffer The function Telescope Module Access Library Interface Computer Software Component Data Capture Interface  Timeout Set provides an Application Programming Interface to the Data Capture Interface  Driver to allow the timeout setting to be altered 
513171 Housekeeping The Telescope Module Access Library Interface Computer Software Component Computer Software Component collects housekeeping data that can be retrieved via a call to Telescope Module Access Library Interface Computer Software Component Housekeeping Get Telescope Module Access Library Interface Computer Software Component Computer Software Component housekeeping is returned via the Telescope Module Access Library Interface Computer Software Component Housekeeping data structure 
51321 Public Functions This routine provides a means to set the bit arrangement used by the Data Capture Interface  When bSpecialArrangement is TRUE the Data Capture Interface  is set to special bit arrangement mode otherwise the default mode of no rearrangement is set 
513210 Public Functions When no data is available in the Telescope Module Access Library Interface Computer Software Component queue this routine blocks on a semaphore awaiting availability of events on the Telescope Module Access Library Interface Computer Software Component queue as indicated by the  When data is already available on the Telescope Module Access Library Interface Computer Software Component queue or the semaphore is taken the number of events on the Telescope Module Access Library Interface Computer Software Component queue is determined and returned to the caller The parameter TicksToWait specifies the maximum time which the function can wait until data becomes available in kernel ticks The parameter may be set to a symbolic value FOREVER which causes the function only to return when data is available When the function is called with a timeout value and no data becomes avialable within that period the function will return zero events available If the Telescope Module Access Library Interface Computer Software Component task has not been initialized the function returns an error 
51322 Public Functions This function gets the frame depth of the Ping Pong buffers used by the Data Capture Interface  Computer Software Component The frame depth determines how many frames are read into the selected Ping Pong buffer before interrupting The initial value for the frame depth setting is determined by the parameter provided when stating the Telescope Module Access Library Interface Computer Software Component Task The returned value is the current active value this may differ from the last commanded value as the commanded value only takes effect when data is transferred from the hardware Ping Pong buffer to the Telescope Module Access Library Interface Computer Software Component queue in response to a frame or timeout interrupt see section 5 13 2 3 
51323 Public Functions This function sets the frame depth of the Ping Pong buffers used by the Data Capture Interface  Computer Software Component The frame depth determines how many frames are read into the selected Ping Pong buffer before interrupting The initial value for the frame depth setting is determined by the parameter provided when starting the Telescope Module Access Library Interface Computer Software Component Task The maximum value to which the frame depth can be commanded is 64 frames an attempt to command the frame depth to a value larger than this maximum will result in setting the timeout to the default value of V frames The actual setting of the frame depth could be delayed by a small amount of time if there is activity on the Data Capture Interface  bus and is typically changed when the Data Capture Interface  has just reported a frame level reached or timeout condition This minimizes the chance of changing the setting while the hardware is close to detecting a frame event Changing the frame depth while the Data Capture Interface  Computer Software Component is processing data could cause unpredictable results When a new Telescope Module Access Library Interface CSCData Capture InterfaceFrameDepthSet command is send before the previous setting has been activated the new request will overwrite the previous request and the Data Capture Interface  will be commanded to the new value at the first available opportunity 
51324 Public Functions This routine provides a means to get the current data timeout value used by the Data Capture Interface  The returned value is the current timeout in milliseconds The timeout is Spacecraft Control Units sed in document 036911400 section 4 3 2 4 1 3 
51325 Public Functions This routine provides a means to set the data timeout used by the Data Capture Interface  the value requested indicates the timeout in milliseconds The initial value for the frame depth setting is determined by the parameter provided when starting the Telescope Module Access Library Interface Computer Software Component Task The maximum value to which the timeout can be commanded is X seconds an attempt to set the timeout to a number larger than this maximum will result in setting the timeout to the default value of X milliseconds 
51326 Public Functions This routine provides a means to set Data Capture Interface  windowing parameters used by the Data Capture Interface  data acquisition Before commanding the Data Capture Interface  driver to change the Data Capture Interface  hardware windowing parameters the window specification is verified If the setting is incorrect the function returns an error and the hardware windowing function is not activated The function both sets the requested hardware window specification and activates the hardware windowing function 
51327 Public Functions This routine gets housekeeping data stored for the Telescope Module Access Library Interface Computer Software Component Computer Software Component including some Data Capture Interface  parameters and resets the Telescope Module Access Library Interface Computer Software Component internal counters to zero When the caller supplied pointer to a Telescope Module Access Library Interface Computer Software Component Housekeeping structure is NIL no data is returned but the Telescope Module Access Library Interface Computer Software Component internal counters are still reset to zero Two of the four error counters are updated within an  context this requires a task switch safe implementation of these counters Within V x Works this could be solved using a counting semaphore In the Telescope Module Access Library Interface Computer Software Component Computer Software Component design a faster method was used by using a free running error counter and a careful update of the reported number of errors using an extra temporary variable As the increment and assignment of the 32 bit unsigned integers themselves are atomic operations the resulting counters are task safe and no error events are lost This means that the sum of the errors reported by the Telescope Module Access Library Interface CSCHkGet function is equal to the total numbers of errors that occurred no error reports are lost due to the update of the internal structures 
51328 Public Functions This function returns the next EVENT in the queue to the caller The caller should store the value returned by this function in a variable defined locally within the scope of the function from which it is called If the return value is stored as described above the EVENT value is stored in a processor register rather than memory Processing is therefore much faster since register accesses on the processor are much faster than memory accesses A compilation option Telescope Module Access Library Interface Computer Software Component no checks is provided for the disabling of buffer empty checks This results in slightly faster code but should only be used when the application using this function is known to make proper calls to the function If the Telescope Module Access Library Interface Computer Software Component module is compiled with the Telescope Module Access Library Interface Computer Software Component no checks option an improper call to the Telescope Module Access Library Interface Computer Software Component NextEvent function calling it when no data is available in the Telescope Module Access Library Interface Computer Software Component buffer will compromise the Telescope Module Access Library Interface Computer Software Component buffer data structure The queue structure and the related pointers are described in the local Telescope Module Access Library Interface Computer Software Component P h header file As only the write pointer pOut is manipulated here and the operations on the 32 bit pointers themselves are atomic no mutual exclusion problem can occur 
